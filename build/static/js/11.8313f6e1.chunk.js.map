{"version":3,"sources":["views/main/questionManage/textQuestion/index.tsx"],"names":["TextQuestion","_super","props","_this","call","this","state","data","modal1Visible","modal2Visible","typeData","sort","handChange","e","value","target","setState","AddGetType","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","getAddExamType","question","console","log","text","result","_a","sent","code","__WEBPACK_IMPORTED_MODULE_3_antd__","success","msg","error","getList","getQuestionsType","length","prototype","setModal1Visible","setModal2Visible","show","key","componentDidMount","render","map","item","index","ID","questions_type_id","name","questions_type_text","caozuo","__WEBPACK_IMPORTED_MODULE_1_react__","style","fontSize","margin","className","marginBottom","type","padding","fontWeight","onClick","title","centered","okText","cancelText","visible","onOk","onCancel","border","borderBottom","outline","size","placeholder","onChange","backgroundColor","columns","dataIndex","dataSource","__WEBPACK_IMPORTED_MODULE_2_mobx_react__","__webpack_exports__"],"mappings":"oJAaAA,EAAA,SAAAC,GACI,SAAAD,EAAYE,GAAZ,IAAAC,EACIF,EAAAG,KAAAC,KAAMH,IAAMG,YAEhBF,EAAAG,OACIC,QACAC,eAAe,EACfC,eAAe,EACfC,SAAU,GACVC,KAAM,IAOVR,EAAAS,WAAa,SAACC,GACJ,IAAAC,EAAAD,EAAAE,OAAAD,MACNX,EAAKa,UACDN,SAAUI,KAgBlBX,EAAAc,WAAa,kBAAAC,OAAAC,EAAA,EAAAD,CAAAf,OAAA,uFAGI,OAFPiB,EAAmBf,KAAKH,MAAMmB,SAAQD,eAC5CE,QAAQC,IAAIlB,KAAKC,MAAMI,WACV,EAAMU,GACfI,KAAMnB,KAAKC,MAAMI,SACjBC,KAAMN,KAAKC,MAAMK,KAAO,oBAER,KAJhBc,EAASC,EAAAC,QAIFC,KAEPC,EAAA,EAAQC,QAAQL,EAAOM,KAEvBF,EAAA,EAAQG,MAAMP,EAAOM,KAEzB1B,KAAK4B,oBAKT9B,EAAA8B,QAAU,kBAAAf,OAAAC,EAAA,EAAAD,CAAAf,OAAA,qFAEO,UADL+B,EAAqB7B,KAAKH,MAAMmB,SAAQa,mCAC5CT,EAASC,EAAAC,OACbtB,KAAKW,UACDT,KAAMkB,EAAOlB,KACbI,KAAMc,EAAOlB,KAAK4B,OAAS,gBAoFvC,OA9I2BjB,OAAAC,EAAA,EAAAD,CAAAlB,EAAAC,GAYvBD,EAAAoC,UAAAC,iBAAA,SAAiB7B,GACbH,KAAKW,UAAWR,cAAaA,KAUjCR,EAAAoC,UAAAE,iBAAA,SAAiB7B,GACbJ,KAAKW,UACDP,cAAeA,EAAc8B,OAEP,iBAAtB9B,EAAc+B,MACdnC,KAAKY,aACLZ,KAAKW,UACDN,SAAU,OAoBtBV,EAAAoC,UAAAK,kBAAA,WACIpC,KAAK4B,WAWFjC,EAAAoC,UAAAM,OAAP,eAAAvC,EAAAE,KAeUE,EAAOF,KAAKC,MAAMC,KAAKoC,IAAI,SAACC,EAAWC,GACzC,OACIL,IAAKK,EACLC,GAAIF,EAAKG,kBACTC,KAAMJ,EAAKK,oBACXC,OAAQ,MAGVxC,EAAAL,KAAAC,MAAAI,SACN,OACIyC,EAAA,yBACIA,EAAA,oBAAIC,OAASC,SAAU,OAAQC,OAAQ,eAAc,4BAGrDH,EAAA,qBAAKI,UAAU,WACXJ,EAAA,qBAAKC,OAASI,aAAc,SACxBL,EAAA,cAACtB,EAAA,GACG4B,KAAK,UACLL,OAASM,QAAS,SAAUC,WAAY,QACxCC,QAAS,WACL,OAAAzD,EAAKmC,kBACDC,MAAM,EACNC,IAAK,mBACP,6BAIVW,EAAA,cAACtB,EAAA,GACGgC,MAAM,iCACNC,UAAQ,EACRC,OAAO,eACPC,WAAW,eACXC,QAAS5D,KAAKC,MAAMG,cACpByD,KAAM,WACF,OAAA/D,EAAKmC,kBACDC,MAAM,EACNC,IAAK,kBAGb2B,SAAU,WACN,OAAAhE,EAAKmC,kBACDC,MAAM,EACNC,IAAK,mBAGbW,EAAA,cAACtB,EAAA,GACGuB,OACIgB,OAAQ,OACRC,aAAc,iBACdC,QAAS,QAEbC,KAAK,QACLC,YAAY,6CACZ1D,MAAOJ,EACP+D,SAAUpE,KAAKO,eAI3BuC,EAAA,qBAAKC,OAASsB,gBAAiB,SAC3BvB,EAAA,cAACtB,EAAA,GAAM8C,UAvEfd,MAAO,iBACPe,UAAW,OAGXf,MAAO,2BACPe,UAAW,SAGXf,MAAO,eACPe,UAAW,WA8DsBC,WAAYtE,QAxIvDP,EAAYkB,OAAAC,EAAA,EAAAD,EAFjBA,OAAA4D,EAAA,EAAA5D,CAAO,YACP4D,EAAA,6CACK9E,GAAN,CAA2BmD,EAAA,WAgJZ4B,EAAA","file":"static/js/11.8313f6e1.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { Button, Table, Modal, Input, message } from 'antd'\r\n\r\ninterface Props {\r\n    question: any\r\n    data: any\r\n    questions_type_id: any\r\n    questions_type_text: any\r\n}\r\n\r\n@inject('question')\r\n@observer\r\nclass TextQuestion extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n    }\r\n    state = {\r\n        data: [],\r\n        modal1Visible: false,\r\n        modal2Visible: false,\r\n        typeData: '',\r\n        sort: ''\r\n    }\r\n\r\n    setModal1Visible(modal1Visible: any) {\r\n        this.setState({ modal1Visible })\r\n    }\r\n    //获取添加试卷分类的值\r\n    handChange = (e: any) => {\r\n        let { value } = e.target\r\n        this.setState({\r\n            typeData: value\r\n        })\r\n    }\r\n    //更改显示框的隐藏和显示状态\r\n    setModal2Visible(modal2Visible: any) {\r\n        this.setState({\r\n            modal2Visible: modal2Visible.show\r\n        })\r\n        if (modal2Visible.key === '确认') {\r\n            this.AddGetType()\r\n            this.setState({\r\n                typeData: ''\r\n            })\r\n        }\r\n    }\r\n    //调用mobx 发起axios请求\r\n    AddGetType = async () => {\r\n        let { getAddExamType } = this.props.question\r\n        console.log(this.state.typeData)\r\n        let result = await getAddExamType({\r\n            text: this.state.typeData,\r\n            sort: this.state.sort + ''\r\n        })\r\n        if (result.code === 1) {\r\n            //添加成功后重新渲染数据\r\n            message.success(result.msg)\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n        this.getList()\r\n    }\r\n    componentDidMount() {\r\n        this.getList()\r\n    }\r\n    getList = async () => {\r\n        const { getQuestionsType } = this.props.question\r\n        let result = await getQuestionsType()\r\n        this.setState({\r\n            data: result.data,\r\n            sort: result.data.length + 1\r\n        })\r\n    }\r\n\r\n    public render() {\r\n        const columns = [\r\n            {\r\n                title: '类型ID',\r\n                dataIndex: 'ID'\r\n            },\r\n            {\r\n                title: '类型名称',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'caozuo'\r\n            }\r\n        ]\r\n        const data = this.state.data.map((item: any, index) => {\r\n            return {\r\n                key: index,\r\n                ID: item.questions_type_id,\r\n                name: item.questions_type_text,\r\n                caozuo: ''\r\n            }\r\n        })\r\n        let { typeData } = this.state\r\n        return (\r\n            <div>\r\n                <h1 style={{ fontSize: '18px', margin: '0 0 10px 0' }}>\r\n                    试卷分类\r\n                </h1>\r\n                <div className=\"content\">\r\n                    <div style={{ marginBottom: '10px' }}>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            style={{ padding: '0 40px', fontWeight: 'bold' }}\r\n                            onClick={() =>\r\n                                this.setModal2Visible({\r\n                                    show: true,\r\n                                    key: '添加'\r\n                                })\r\n                            }>\r\n                            +添加按钮\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"创建新类型\"\r\n                            centered\r\n                            okText=\"确认\"\r\n                            cancelText=\"取消\"\r\n                            visible={this.state.modal2Visible}\r\n                            onOk={() =>\r\n                                this.setModal2Visible({\r\n                                    show: false,\r\n                                    key: '确认'\r\n                                })\r\n                            }\r\n                            onCancel={() =>\r\n                                this.setModal2Visible({\r\n                                    show: false,\r\n                                    key: '取消'\r\n                                })\r\n                            }>\r\n                            <Input\r\n                                style={{\r\n                                    border: 'none',\r\n                                    borderBottom: '1px solid #ccc',\r\n                                    outline: 'none'\r\n                                }}\r\n                                size=\"large\"\r\n                                placeholder=\"请输入类型名称\"\r\n                                value={typeData}\r\n                                onChange={this.handChange}\r\n                            />\r\n                        </Modal>\r\n                    </div>\r\n                    <div style={{ backgroundColor: '#fff' }}>\r\n                        <Table columns={columns} dataSource={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextQuestion\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/main/questionManage/textQuestion/index.tsx"],"sourceRoot":""}