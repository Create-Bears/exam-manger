{"version":3,"sources":["views/main/questionManage/checkTextQuestion/index.tsx","views/main/questionManage/checkTextQuestion/index.scss"],"names":["Option","__WEBPACK_IMPORTED_MODULE_3_antd__","OptGroup","CheckTextQuestion","_super","props","_this","call","this","state","topList","examQuestion","examType","titleType","current","val","vals","getList","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","_a","question","getQuestionSubject","getQuestionExam","getQuestionsType","getQuestionTypes","result","_b","sent","resultList","typeList","examList","console","log","data","setState","prototype","clicks","ind","componentDidMount","render","__WEBPACK_IMPORTED_MODULE_1_react__","style","fontSize","margin","className","map","item","index","key","onClick","bind","subject_text","defaultValue","width","onChange","value","label","exam_name","questions_type_text","type","icon","examLists","filter","history","replace","questions_id","id","title","user_name","__WEBPACK_IMPORTED_MODULE_2_mobx_react__","__webpack_exports__","module","exports","__webpack_require__","p"],"mappings":"6JAIQA,UAAAC,EAAA,EAAAD,QAAQE,EAAAD,EAAA,EAAAC,SAShBC,EAAA,SAAAC,GACE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAEdF,EAAAG,OACEC,WACAC,gBACAC,YACAC,aACAC,QAAS,EACTC,IAAK,GACLC,KAAM,IAURV,EAAAW,QAAU,kBAAAC,OAAAC,EAAA,EAAAD,CAAAZ,OAAA,qGAOK,OANPc,EAKFZ,KAAKH,MAAMgB,SAJbC,EAAkBF,EAAAE,mBAClBC,EAAeH,EAAAG,gBACfC,EAAgBJ,EAAAI,iBAChBC,EAAgBL,EAAAK,kBAEL,EAAMH,YACF,OADbI,EAASC,EAAAC,QACI,EAAML,YACR,OADXM,EAAaF,EAAAC,QACF,EAAMJ,YACN,OADXM,EAAWH,EAAAC,QACA,EAAMH,mBAAjBM,EAAWJ,EAAAC,OACfI,QAAQC,IAAIP,EAAOQ,MACnB1B,KAAK2B,UACHzB,QAASgB,EAAOQ,KAChBvB,aAAckB,EAAWK,KACzBrB,UAAWiB,EAASI,KACpBtB,SAAUmB,EAASG,mBA0MzB,OA/OgChB,OAAAC,EAAA,EAAAD,CAAAf,EAAAC,GAa9BD,EAAAiC,UAAAC,OAAA,SAAOC,GACL9B,KAAK2B,UACHrB,QAASwB,KAGbnC,EAAAiC,UAAAG,kBAAA,WACE/B,KAAKS,WAqBAd,EAAAiC,UAAAI,OAAP,eAAAlC,EAAAE,KACE,OACEiC,EAAA,yBACEA,EAAA,oBAAIC,OAASC,SAAU,OAAQC,OAAQ,eAAc,4BAGrDH,EAAA,qBAAKI,UAAU,WACbJ,EAAA,qBAAKI,UAAU,OACbJ,EAAA,qBAAKI,UAAU,OAAOH,OAASC,SAAU,SACvCF,EAAA,wDAEFA,EAAA,qBAAKI,UAAU,QACbJ,EAAA,qBAAKI,UAAU,WACbJ,EAAA,sBAAMI,UAAU,SACdJ,EAAA,sBAAMI,UAAU,yBAAuB,OAGtCrC,KAAKC,MAAMC,QAAQoC,IAClB,SAACC,EAAWC,GACV,OACEP,EAAA,sBACEI,UACEvC,EAAKG,MAAMK,UACTkC,EACE,gCACA,wBAENC,IAAKD,EACLE,QAAS5C,EAAK+B,OAAOc,KACnB7C,EACA0C,IAEDD,EAAKK,oBAStBX,EAAA,qBAAKI,UAAU,aACbJ,EAAA,qBAAKC,OAASC,SAAU,SACtBF,EAAA,uDACcA,EAAA,cAACxC,EAAA,GACboD,aAAa,GACbX,OAASY,MAAO,KAChBC,SAAU,SAACC,GACTlD,EAAK6B,UACHpB,IAAKyC,MAGTf,EAAA,cAACvC,GAASuD,MAAM,4BACbjD,KAAKC,MAAMG,SAASkC,IACnB,SAACC,EAAWC,GACV,OACEP,EAAA,cAACzC,GACCwD,MAAOT,EAAKW,UACZT,IAAKD,GACJD,EAAKW,gBAQpBjB,EAAA,qBAAKC,OAASC,SAAU,SACtBF,EAAA,uDACcA,EAAA,cAACxC,EAAA,GACboD,aAAa,GACbX,OAASY,MAAO,KAChBC,SAAU,SAACC,GAETlD,EAAK6B,UACHnB,KAAMwC,MAGVf,EAAA,cAACvC,GAASuD,MAAM,4BACbjD,KAAKC,MAAMI,UAAUiC,IACpB,SAACC,EAAWC,GACV,OACEP,EAAA,cAACzC,GACCwD,MACET,EAAKY,oBAEPV,IAAKD,GACJD,EAAKY,0BAQpBlB,EAAA,yBACEA,EAAA,cAACxC,EAAA,GACC2D,KAAK,UACLC,KAAK,SACLX,QAAS,WACP,IAAIY,EAAYxD,EAAKG,MAAME,aAAaoD,OACtC,SAAChB,GACC,GACGzC,EAAKG,MAAMO,OACV+B,EAAKY,qBACLrD,EAAKG,MAAMM,MACXgC,EAAKW,WACPpD,EAAKG,MAAMO,OACX+B,EAAKY,qBACLrD,EAAKG,MAAMM,MACXgC,EAAKW,UAEL,OAAOX,IAIbzC,EAAK6B,UACHxB,aAAcmD,MAEjB,mBAOTrB,EAAA,cAACxC,EAAA,EAAM,KACLwC,EAAA,qBAAKI,UAAU,YACZrC,KAAKC,MAAME,aAAamC,IACvB,SAACC,EAAWC,GACV,OACEP,EAAA,qBAAKI,UAAU,iBAAiBI,IAAKD,GACnCP,EAAA,qBACEI,UAAU,mBACVK,QAAS,WACP5C,EAAKD,MAAM2D,QAAQC,QACjB,4BAA4BlB,EAAKmB,cAC/BC,GAAIpB,EAAKmB,eAEblC,QAAQC,IAAI3B,EAAKD,SAEnBoC,EAAA,qBAAKI,UAAU,sBACbJ,EAAA,oBACEC,OACEC,SAAU,SAEXI,EAAKqB,QAGV3B,EAAA,qBAAKI,UAAU,sBACbJ,EAAA,yBACEA,EAAA,qBAAKI,UAAU,QAEXE,EAAKY,qBAGTlB,EAAA,qBAAKI,UAAU,YACZE,EAAKK,cAERX,EAAA,qBAAKI,UAAU,UACZE,EAAKW,YAGVjB,EAAA,sBACEC,OACEC,SAAU,SAEXI,EAAKsB,6BAGZ5B,EAAA,oBAAII,UAAU,oBACZJ,EAAA,oBACEC,OACEC,SAAU,SAEZF,EAAA,mBACEC,OACEC,SAAU,QAEZO,QAAS,WACP5C,EAAKD,MAAM2D,QAAQC,QACjB,qCAAqClB,EAAKmB,cAExCC,GACEpB,EAAKmB,iBAGZ,yBAnOrB/D,EAAiBe,OAAAC,EAAA,EAAAD,EAFtBA,OAAAoD,EAAA,EAAApD,CAAO,YACPoD,EAAA,6CACKnE,GAAN,CAAgCsC,EAAA,WAiPjB8B,EAAA,gCC9PfC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/9.7f5acdf2.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { Layout, Select, Button } from 'antd'\r\nimport './index.scss'\r\nconst { Option, OptGroup } = Select\r\n\r\ninterface Props {\r\n  question: any\r\n  history: any\r\n}\r\n\r\n@inject('question')\r\n@observer\r\nclass CheckTextQuestion extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n  }\r\n  state = {\r\n    topList: [],\r\n    examQuestion: [],\r\n    examType: [],\r\n    titleType: [],\r\n    current: 0,\r\n    val: '',\r\n    vals: ''\r\n  }\r\n  clicks(ind: any) {\r\n    this.setState({\r\n      current: ind\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.getList()\r\n  }\r\n  getList = async () => {\r\n    const {\r\n      getQuestionSubject,\r\n      getQuestionExam,\r\n      getQuestionsType,\r\n      getQuestionTypes\r\n    } = this.props.question\r\n    let result = await getQuestionSubject()\r\n    let resultList = await getQuestionExam()\r\n    let typeList = await getQuestionsType()\r\n    let examList = await getQuestionTypes()\r\n    console.log(result.data)\r\n    this.setState({\r\n      topList: result.data,\r\n      examQuestion: resultList.data,\r\n      titleType: typeList.data,\r\n      examType: examList.data\r\n    })\r\n  }\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontSize: '18px', margin: '0 0 10px 0' }}>\r\n          查看试题\r\n                </h1>\r\n        <div className=\"ant-top\">\r\n          <div className=\"row\">\r\n            <div className=\"row1\" style={{ fontSize: '13px' }}>\r\n              <b>课程类型</b>:\r\n                        </div>\r\n            <div className=\"row2\">\r\n              <div className=\"control\">\r\n                <span className=\"child\">\r\n                  <span className=\"tag ant-tag-checkable\">\r\n                    All\r\n                                    </span>\r\n                  {this.state.topList.map(\r\n                    (item: any, index) => {\r\n                      return (\r\n                        <span\r\n                          className={\r\n                            this.state.current ===\r\n                              index\r\n                              ? 'tag ant-tag-checkable-checked'\r\n                              : 'tag ant-tag-checkable'\r\n                          }\r\n                          key={index}\r\n                          onClick={this.clicks.bind(\r\n                            this,\r\n                            index\r\n                          )}>\r\n                          {item.subject_text}\r\n                        </span>\r\n                      )\r\n                    }\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"topList-b\">\r\n            <div style={{ fontSize: '13px' }}>\r\n              <b>考试类型</b>:\r\n                            <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                onChange={(value: any) => {\r\n                  this.setState({\r\n                    val: value\r\n                  })\r\n                }}>\r\n                <OptGroup label=\"考试类型\">\r\n                  {this.state.examType.map(\r\n                    (item: any, index) => {\r\n                      return (\r\n                        <Option\r\n                          value={item.exam_name}\r\n                          key={index}>\r\n                          {item.exam_name}\r\n                        </Option>\r\n                      )\r\n                    }\r\n                  )}\r\n                </OptGroup>\r\n              </Select>\r\n            </div>\r\n            <div style={{ fontSize: '13px' }}>\r\n              <b>题目类型</b>:\r\n                            <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                onChange={(value: any) => {\r\n                  // console.log(value)\r\n                  this.setState({\r\n                    vals: value\r\n                  })\r\n                }}>\r\n                <OptGroup label=\"题目类型\">\r\n                  {this.state.titleType.map(\r\n                    (item: any, index) => {\r\n                      return (\r\n                        <Option\r\n                          value={\r\n                            item.questions_type_text\r\n                          }\r\n                          key={index}>\r\n                          {item.questions_type_text}\r\n                        </Option>\r\n                      )\r\n                    }\r\n                  )}\r\n                </OptGroup>\r\n              </Select>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                icon=\"search\"\r\n                onClick={() => {\r\n                  let examLists = this.state.examQuestion.filter(\r\n                    (item: any) => {\r\n                      if (\r\n                        (this.state.vals ===\r\n                          item.questions_type_text &&\r\n                          this.state.val ===\r\n                          item.exam_name) ||\r\n                        this.state.vals ===\r\n                        item.questions_type_text ||\r\n                        this.state.val ===\r\n                        item.exam_name\r\n                      ) {\r\n                        return item\r\n                      }\r\n                    }\r\n                  )\r\n                  this.setState({\r\n                    examQuestion: examLists\r\n                  })\r\n                }}>\r\n                查询\r\n                            </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Layout>\r\n          <div className=\"ant-list\">\r\n            {this.state.examQuestion.map(\r\n              (item: any, index: number) => {\r\n                return (\r\n                  <div className=\"antd-list-item\" key={index}>\r\n                    <div\r\n                      className=\"antd-list-item-l\"\r\n                      onClick={() => {\r\n                        this.props.history.replace(\r\n                          `/home/question/detail?id=${item.questions_id}`,\r\n                          { id: item.questions_id }\r\n                        )\r\n                        console.log(this.props)\r\n                      }}>\r\n                      <div className=\"antd-list-item-l-t\">\r\n                        <h4\r\n                          style={{\r\n                            fontSize: '14px'\r\n                          }}>\r\n                          {item.title}\r\n                        </h4>\r\n                      </div>\r\n                      <div className=\"antd-list-item-l-b\">\r\n                        <div>\r\n                          <div className=\"blue\">\r\n                            {\r\n                              item.questions_type_text\r\n                            }\r\n                          </div>\r\n                          <div className=\"geekblue\">\r\n                            {item.subject_text}\r\n                          </div>\r\n                          <div className=\"orange\">\r\n                            {item.exam_name}\r\n                          </div>\r\n                        </div>\r\n                        <span\r\n                          style={{\r\n                            fontSize: '14px'\r\n                          }}>\r\n                          {item.user_name}发布 </span>\r\n                      </div>\r\n                    </div>\r\n                    <ul className=\"antd-list-item-r\">\r\n                      <li\r\n                        style={{\r\n                          fontSize: '14px'\r\n                        }}>\r\n                        <a\r\n                          style={{\r\n                            fontSize: '14px'\r\n                          }}\r\n                          onClick={() => {\r\n                            this.props.history.replace(\r\n                              `/home/question/checkTextEditor?id=${item.questions_id}`,\r\n                              {\r\n                                id:\r\n                                  item.questions_id\r\n                              }\r\n                            )\r\n                          }}>编辑</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )\r\n              }\r\n            )}\r\n          </div>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckTextQuestion\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/main/questionManage/checkTextQuestion/index.tsx","module.exports = __webpack_public_path__ + \"static/media/index.d156397d.scss\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/main/questionManage/checkTextQuestion/index.scss\n// module id = 1256\n// module chunks = 9"],"sourceRoot":""}