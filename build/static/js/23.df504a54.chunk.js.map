{"version":3,"sources":["views/main/ClassMange/classRoomer/index.tsx"],"names":["ClassRoomer","_super","_this","apply","this","arguments","state","classroom","visible","classes","deleteClicks","text","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","room_id","key","getDeleteClasses","props","classmanger","resulte","_a","sent","code","__WEBPACK_IMPORTED_MODULE_3_antd__","success","msg","error","getList","handChange","e","setState","target","value","showModal","hideModal","AddClasses","handleSubmit","preventDefault","form","validateFields","err","values","console","log","getAddClasses","room_text","result","getClasses","results","data","prototype","componentDidMount","render","getFieldDecorator","columns","title","dataIndex","record","__WEBPACK_IMPORTED_MODULE_1_react__","onClick","bind","map","item","index","style","fontSize","margin","className","marginBottom","type","onOk","onCancel","okText","cancelText","labelCol","span","wrapperCol","onSubmit","Item","label","rules","required","message","placeholder","onChange","backgroundColor","dataSource","__WEBPACK_IMPORTED_MODULE_2_mobx_react__","__webpack_exports__","create"],"mappings":"oJAcAA,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACIF,EAAAI,OACIC,aACAC,SAAS,EACTC,QAAS,IAGbP,EAAAQ,aAAe,SAAOC,GAAS,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,OAAA,uFAIb,OAHNY,EAAYV,KAAKE,MAAMC,UAAUI,EAAKI,KAAID,SAGpC,GADRE,EAAqBZ,KAAKa,MAAMC,YAAWF,mBAE7CF,QAASA,mBAEQ,KAHjBK,EAAUC,EAAAC,QAGFC,KAERC,EAAA,EAAQC,QAAQL,EAAQM,KAExBF,EAAA,EAAQG,MAAMP,EAAQM,KAE1BrB,KAAKuB,oBAETzB,EAAA0B,WAAa,SAACC,GACV3B,EAAK4B,UACDrB,QAASoB,EAAEE,OAAOC,SAG1B9B,EAAA+B,UAAY,WACR/B,EAAK4B,UACDtB,SAAS,KAIjBN,EAAAgC,UAAY,WACRhC,EAAKiC,aACLjC,EAAK4B,UACDtB,SAAS,KAIjBN,EAAAkC,aAAe,SAACP,GACZA,EAAEQ,iBACFnC,EAAKe,MAAMqB,KAAKC,eAAe,SAACC,EAAUC,GACjCD,GACDE,QAAQC,IAAI,4BAA6BF,MAMrDvC,EAAAiC,WAAa,kBAAAvB,OAAAC,EAAA,EAAAD,CAAAV,OAAA,qFAEI,UADP0C,EAAkBxC,KAAKa,MAAMC,YAAW0B,gBAE1CC,UAAWzC,KAAKE,MAAMG,yBAEN,KAHhBqC,EAAS1B,EAAAC,QAGFC,KAEPC,EAAA,EAAQC,QAAQsB,EAAOrB,KAEvBF,EAAA,EAAQG,MAAMoB,EAAOrB,KAEzBrB,KAAKuB,oBAOTzB,EAAAyB,QAAU,kBAAAf,OAAAC,EAAA,EAAAD,CAAAV,OAAA,qFAEQ,UADN6C,EAAe3C,KAAKa,MAAMC,YAAW6B,6BACzCC,EAAU5B,EAAAC,OACdjB,KAAK0B,UACDvB,UAAWyC,EAAQC,mBAiF/B,OAzJ0BrC,OAAAC,EAAA,EAAAD,CAAAZ,EAAAC,GAgEtBD,EAAAkD,UAAAC,kBAAA,WACI/C,KAAKuB,WAUF3B,EAAAkD,UAAAE,OAAP,eAAAlD,EAAAE,KACYiD,EAAAjD,KAAAa,MAAAqB,KAAAe,kBACFC,IAEEC,MAAO,qBACPC,UAAW,YAGXD,MAAO,GACPC,UAAW,KAGXD,MAAO,GACPC,UAAW,KAGXD,MAAO,SACPxC,IAAK,SACLqC,OAAQ,SAACzC,EAAW8C,GAAgB,OAChCC,EAAA,0BACIA,EAAA,mBAAGC,QAASzD,EAAKQ,aAAakD,KAAK1D,EAAMS,IAAK,oBAKxDsC,EAAO7C,KAAKE,MAAMC,UAAUsD,IAAI,SAACC,EAAWC,GAC9C,OACIhD,IAAKgD,EACLtD,QAASqD,EAAKjB,aAGtB,OACIa,EAAA,yBACIA,EAAA,oBAAIM,OAASC,SAAU,OAAQC,OAAQ,eAAc,4BAGrDR,EAAA,qBAAKS,UAAU,WACXT,EAAA,qBAAKM,OAASI,aAAc,SACxBV,EAAA,cAACnC,EAAA,GAAO8C,KAAK,UAAUV,QAASvD,KAAK6B,WAAS,6BAG9CyB,EAAA,cAACnC,EAAA,GACGgC,MAAM,2BACN/C,QAASJ,KAAKE,MAAME,QACpB8D,KAAMlE,KAAK8B,UACXqC,SAAUnE,KAAK8B,UACfsC,OAAO,eACPC,WAAW,gBACXf,EAAA,cAACnC,EAAA,GACGmD,UAAYC,KAAM,GAClBC,YAAcD,KAAM,IACpBE,SAAUzE,KAAKgC,cACfsB,EAAA,cAACnC,EAAA,EAAKuD,MAAKC,MAAM,sBACZ1B,EAAkB,WACf2B,QAEQC,UAAU,EACVC,QACI,gCALf7B,CASGK,EAAA,cAACnC,EAAA,GACG4D,YAAY,qBACZC,SAAUhF,KAAKwB,kBAOvC8B,EAAA,qBAAKM,OAASqB,gBAAiB,SAC3B3B,EAAA,cAACnC,EAAA,GAAM+B,QAASA,EAASgC,WAAYrC,QAnJvDjD,EAAWY,OAAAC,EAAA,EAAAD,EAFhBA,OAAA2E,EAAA,EAAA3E,CAAO,cAAe,YACtB2E,EAAA,GACKvF,GAAN,CAA0B0D,EAAA,WA0JX8B,EAAA,QAAAjE,EAAA,EAAKkE,QAAL,CAAczF","file":"static/js/23.df504a54.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { Table, Button, Modal, Form, Input, message } from 'antd'\r\ninterface Props {\r\n    age: number\r\n    name: string\r\n    classmanger: any\r\n    data: any\r\n    question: any\r\n    form: any\r\n}\r\n\r\n@inject('classmanger', 'question')\r\n@observer\r\nclass ClassRoomer extends React.Component<Props> {\r\n    state = {\r\n        classroom: [],\r\n        visible: false,\r\n        classes: ''\r\n    }\r\n\r\n    deleteClicks = async (text: any) => {\r\n        const { room_id } = this.state.classroom[text.key]\r\n        // console.log(room_id)\r\n        let { getDeleteClasses } = this.props.classmanger\r\n        let resulte = await getDeleteClasses({\r\n            room_id: room_id\r\n        })\r\n        if (resulte.code === 1) {\r\n            //添加成功后重新渲染数据\r\n            message.success(resulte.msg)\r\n        } else {\r\n            message.error(resulte.msg)\r\n        }\r\n        this.getList()\r\n    }\r\n    handChange = (e: any) => {\r\n        this.setState({\r\n            classes: e.target.value\r\n        })\r\n    }\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.AddClasses()\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e: { preventDefault: () => void }) => {\r\n        e.preventDefault()\r\n        this.props.form.validateFields((err: any, values: any) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values)\r\n            }\r\n        })\r\n    }\r\n\r\n    //调用mobx 发起axios请求 添加班级接口\r\n    AddClasses = async () => {\r\n        let { getAddClasses } = this.props.classmanger\r\n        let result = await getAddClasses({\r\n            room_text: this.state.classes\r\n        })\r\n        if (result.code === 1) {\r\n            //添加成功后重新渲染数据\r\n            message.success(result.msg)\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n        this.getList()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getList()\r\n    }\r\n\r\n    getList = async () => {\r\n        const { getClasses } = this.props.classmanger\r\n        let results = await getClasses()\r\n        this.setState({\r\n            classroom: results.data\r\n        })\r\n    }\r\n    public render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        const columns = [\r\n            {\r\n                title: '教室号',\r\n                dataIndex: 'classes'\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: ''\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: ''\r\n            },\r\n            {\r\n                title: 'option',\r\n                key: 'action',\r\n                render: (text: any, record: any) => (\r\n                    <span>\r\n                        <a onClick={this.deleteClicks.bind(this, text)}>删除</a>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n        const data = this.state.classroom.map((item: any, index) => {\r\n            return {\r\n                key: index,\r\n                classes: item.room_text\r\n            }\r\n        })\r\n        return (\r\n            <div>\r\n                <h1 style={{ fontSize: '18px', margin: '0 0 10px 0' }}>\r\n                    教室管理\r\n                </h1>\r\n                <div className=\"content\">\r\n                    <div style={{ marginBottom: '10px' }}>\r\n                        <Button type=\"primary\" onClick={this.showModal}>\r\n                            +添加教室\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"创建班级\"\r\n                            visible={this.state.visible}\r\n                            onOk={this.hideModal}\r\n                            onCancel={this.hideModal}\r\n                            okText=\"确认\"\r\n                            cancelText=\"取消\">\r\n                            <Form\r\n                                labelCol={{ span: 5 }}\r\n                                wrapperCol={{ span: 12 }}\r\n                                onSubmit={this.handleSubmit}>\r\n                                <Form.Item label=\"教室名\">\r\n                                    {getFieldDecorator('classes', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message:\r\n                                                    'Please input your classes!'\r\n                                            }\r\n                                        ]\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"教室名\"\r\n                                            onChange={this.handChange}\r\n                                        />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                    <div style={{ backgroundColor: '#fff' }}>\r\n                        <Table columns={columns} dataSource={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(ClassRoomer)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/main/ClassMange/classRoomer/index.tsx"],"sourceRoot":""}